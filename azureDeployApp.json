{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		// App Settings
		"appPrefix": {
			"type": "string",
			"metadata": {
				"description": "Prefixed used in naming application specific resources"
			},
			"defaultValue": "a1"
		},

		// Availability Set Settings
		"firewallAvsetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the availability set for inbound firewall"
			},
			"defaultValue": "firewall-avset"
		},
		"backendAvsetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the availability set for backend"
			},
			"defaultValue": "backend-avset"
		},

		// Storage Settings
		"storageName": {
			"type": "string",
			"metadata": {
				"description": "Name of the storage account created to store the VM's disks.  Storage account name must be globally unique."
			},
			"defaultValue": "appstorage"
		},
		"storageType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Premium_LRS",
				"Standard_RAGRS"
			],
			"metadata": {
				"description": "Type of the storage account created"
			},
			"defaultValue": "Standard_LRS"
		},

		// Public Ip Settings
		"gatewayPublicIPName": {
			"type": "string",
			"metadata": {
				"description": "Name public IP resource for the application gateway."
			},
			"defaultValue": "gateway-pip"
		},
		"gatewayPublicIPDns" : {
			"type": "string",
			"metadata": {
				"description": "DNS Name of public IP resource for the application gateway.  Name must be globally unique."
			},
			"defaultValue": "appgateway"
		},
		"mgmtPublicIPName": {
			"type": "string",
			"metadata": {
				"description": "Name prefix of public IP resource for Management interface of VM-Series firewall."
			},
			"defaultValue": "mgmt-pip"
		},
		"mgmtPublicIPDns": {
			"type": "string",
			"metadata": {
				"description": "DNS Name prefix of public IP resource for Management interface of VM-Series firewall.  Name must be globally unique."
			},
			"defaultValue": "mgmt"
		},

		// VNet settings
		"virtualNetworkRG": {
			"type": "string",
			"metadata": {
				"description": "Resource Group of existing Virtual Network"
			}
		},
		"virtualNetworkName": {
			"type": "string",
			"defaultValue": "vnet",
			"metadata": {
				"description": "Existing Virtual Network Name"
			}
		},
		"mgmtSubnetName": {
			"type": "string",
			"defaultValue": "Mgmt",
			"metadata": {
				"description": "Subnet for Management Network"
			}
		},
		"untrustedSubnetName": {
			"type": "string",
			"defaultValue": "Untrust",
			"metadata": {
				"description": "Subnet for Untrusted Network"
			}
		},
		"trustedSubnetName": {
			"type": "string",
			"defaultValue": "Trust",
			"metadata": {
				"description": "Subnet for Trusted Network"
			}
		},
		"backendSubnetName": {
			"type": "string",
			"defaultValue": "Backend",
			"metadata": {
				"description": "Subnet for Backend WWW Network"
			}
		},

		// Load Balancer Settings
		"inboundLoadBalancerName": {
			"type": "string",
			"metadata": {
				"description": "Name for the inbound load balancer resource."
			},
			"defaultValue": "inbound-lb"
		},
		"backendLoadBalancerName": {
			"type": "string",
			"metadata": {
				"description": "Name for the backend load balancer resource."
			},
			"defaultValue": "backend-lb"
		},

		// VM settings
		"firewallModel": {
			"type": "string",
			"defaultValue": "byol",
			"allowedValues": [
				"byol",
				"bundle1",
				"bundle2"
			],
			"metadata": {
				"description": "byol = Bring Your Own License; bundle1 = Bundle 1 PAYG (Hourly); bundle2 = Bundle 2 PAYG (Hourly)"
			}
		},
		"firewallVmName": {
			"type": "string",
			"metadata": {
				"description": "Name prefix of VM-Series VM in the Azure portal"
			},
			"defaultValue": "series-vm"
		},
		"firewallVmSize": {
			"type": "string",
			"allowedValues": [
				"Standard_D3",
				"Standard_D4",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D14_v2",
				"Standard_A4"
			],
			"metadata": {
				"description": "Azure VM size for VM-Series"
			},
			"defaultValue": "Standard_D3_v2"
		},
		"backendVmName": {
			"type": "string",
			"metadata": {
				"description": "Name prefix of VM-Series VM in the Azure portal"
			},
			"defaultValue": "backend-vm"
		},
		"backendVmSize": {
			"type": "string",
			"allowedValues": [
				"Standard_A1",
				"Standard_D1",
				"Standard_D1_v2"
			],
			"metadata": {
				"description": "Azure VM size for backend VMs.  Not all sizes are available in all regions."
			},
			"defaultValue": "Standard_D1_v2"
		},
		"username": {
			"type": "string",
			"defaultValue": "AdminUser",
			"metadata": {
				"description": "Username of the administrator account of VM instances"
			}
		},
		"authenticationType": {
			"type": "string",
			"metadata": {
				"description": "Type of administrator user authentication "
			},
			"allowedValues": [
				"sshPublicKey",
				"password"
			],
			"defaultValue": "password"
		},
		"password": {
			"type": "securestring",
			"defaultValue": "P@ssword1234",
			"metadata": {
				"description": "Password for the administrator account of all VM instances. Must be specified if Authentication Type is 'password'."
			}
		},
		"sshPublicKey": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "SSH RSA public key file as a string. Must be specified if Authentication Type is 'sshPublicKey'."
			}
		}
	},
	
	"variables": {
		"baseUrl"                  : "http://raw.githubusercontent.com/fullscale180/PAN/master",
		"deployStorageURL"         : "[concat(variables('baseUrl'),'/deployStorage.json')]",
		"deployBackendURL"         : "[concat(variables('baseUrl'),'/deployBackend.json')]",
		"deployFirewallURL"        : "[concat(variables('baseUrl'),'/deployFirewall.json')]",
		"deployLoadBalancerURL"    : "[concat(variables('baseUrl'),'/deployLoadBalancer.json')]",

		"apStorageName"            : "[toLower(concat(parameters('appPrefix'), parameters('storageName')))]",
		"apGatewayPublicIpDns"     : "[toLower(concat(parameters('appPrefix'), '-', parameters('gatewayPublicIPDns')))]",
		"apMgmtPublicIpDns"        : "[toLower(concat(parameters('appPrefix'), '-', parameters('mgmtPublicIPDns')))]",

		"apFirewallAvsetName"      : "[concat(parameters('appPrefix'), '-', parameters('firewallAvsetName'))]",
		"apBackendAvsetName"       : "[concat(parameters('appPrefix'), '-', parameters('backendAvsetName'))]",
		"apBackendVmName"          : "[concat(parameters('appPrefix'), '-', parameters('backendVmName'))]",
		"apFirewallVmName"         : "[concat(parameters('appPrefix'), '-', parameters('firewallVmName'))]",
		"apInboundLoadBalancerName": "[concat(parameters('appPrefix'), '-', parameters('inboundLoadBalancerName'))]",
		"apBackendLoadBalancerName": "[concat(parameters('appPrefix'), '-', parameters('backendLoadBalancerName'))]",
		"apGatewayPublicIpName"    : "[concat(parameters('appPrefix'), '-', parameters('gatewayPublicIPName'))]",
		"apMgmtPublicIpName"       : "[concat(parameters('appPrefix'), '-', parameters('mgmtPublicIPName'))]",
		"location"                 : "[resourceGroup().location]",
		"rgname"                   : "[resourceGroup().name]"
	},

	"resources": [

		// Deploy Storage
		{	
			"name": "deployStorage",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deployStorageURL')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[variables('location')]"
					},
					"storageType": {
						"value": "[parameters('storageType')]"
					},
					"storageName": {
						"value": "[variables('apStorageName')]"
					}
				}
			}
		},

		// Setup gateway PublicIP
		{ 
			"apiVersion": "2015-06-15",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('apGatewayPublicIPName')]",
			"location": "[variables('location')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel":  "[variables('apGatewayPublicIPDns')]"
				}
			}
		},

		// Deploy inbound load balancer
		{	
			"name": "deployInboundLoadBalancer",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deployLoadBalancerURL')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[variables('location')]"
					},
					"virtualNetworkRG": {
						"value": "[parameters('virtualNetworkRG')]"
					},
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"subnetName": {
						"value": "[parameters('untrustedSubnetName')]"
					},
					"loadBalancerName": {
						"value": "[variables('apInboundLoadBalancerName')]"
					}
				}
			}
		},

		// Deploy backend load balancer
		{	
			"name": "deployBackendLoadBalancer",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deployLoadBalancerURL')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[variables('location')]"
					},
					"virtualNetworkRG": {
						"value": "[parameters('virtualNetworkRG')]"
					},
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"subnetName": {
						"value": "[parameters('trustedSubnetName')]"
					},
					"loadBalancerName": {
						"value": "[variables('apBackendLoadBalancerName')]"
					}
				}
			}
		},

		// Deploy Backend
		{	
			"name": "deployBackend",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"Microsoft.Resources/deployments/deployStorage",
				"Microsoft.Resources/deployments/deployBackendLoadBalancer"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deployBackendURL')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[variables('location')]"
					},
					"storageName": {
						"value": "[variables('apStorageName')]"
					},
					"avSetName": {
						"value": "[variables('apBackendAvsetName')]"
					},
					"virtualNetworkRG": {
						"value": "[parameters('virtualNetworkRG')]"
					},
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"backendSubnetName": {
						"value" : "[parameters('backendSubnetName')]"
					},

					"loadBalancerName": {
						"value": "[variables('apBackendLoadBalancerName')]"
					},
					"virtualMachineName": {
						"value": "[variables('apBackendVmName')]"
					},
					"vmSize": {
						"value": "[parameters('backendVmSize')]"
					},
					"adminUsername": {
						"value": "[parameters('username')]"
					},
					"adminPassword": {
						"value": "[parameters('password')]"
					},
					"sshKey": {
						"value": "[parameters('sshPublicKey')]"
					},
				}
			}
		},

		// Deploy inbound Firewall
		{	
			"name": "deployInboundFirewall",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				// "Microsoft.Resources/deployments/deployVNet",
				"Microsoft.Resources/deployments/deployBackend",
				"Microsoft.Resources/deployments/deployInboundLoadBalancer"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deployFirewallURL')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"baseUrl": {
						"value": "[variables('baseUrl')]"
					},
					"location": {
						"value": "[variables('location')]"
					},
					"avSetName": {
						"value": "[variables('apFirewallAvsetName')]"
					},
					"storageName": {
						"value": "[variables('apStorageName')]"
					},
					"virtualNetworkRG": {
						"value": "[parameters('virtualNetworkRG')]"
					},
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"mgmtSubnetName": {
						"value": "[parameters('mgmtSubnetName')]"
					},
					"inboundSubnetName": {
						"value": "[parameters('untrustedSubnetName')]"
					},
					"outboundSubnetName": {
						"value": "[parameters('trustedSubnetName')]"
					},
					"loadBalancerName": {
						"value": "[variables('apInboundLoadBalancerName')]"
					},
					"mgmtPublicIPName": {
						"value": "[variables('apMgmtPublicIPName')]"
					},
					"mgmtPublicIPDns":{
						"value": "[variables('apMgmtPublicIPDns')]"
					},
					"virtualMachineName": {
						"value": "[variables('apFirewallVmName')]"
					},
					"vmSize": {
						"value": "[parameters('firewallVmSize')]"
					},
					"imageSku" : {
						"value": "[parameters('firewallModel')]"
					},
					"adminUsername": {
						"value": "[parameters('username')]"
					},
					"adminPassword": {
						"value": "[parameters('password')]"
					},
					"sshKey": {
						"value": "[parameters('sshPublicKey')]"
					},
				}
			}
		},

		// Connect gateway Public IP to inbound load balancer
		{ 
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('apInboundLoadBalancerName')]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('apGatewayPublicIPName'))]"
			],
			"location": "[variables('location')]",
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "Frontend",
						"properties": {
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('apGatewayPublicIPName'))]"
							}
						}
					}
				]
			}
		}

	],
	"outputs": {}
}